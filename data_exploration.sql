-- >>Database Exploration

-- Explore all objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore all the columns in the database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

-- >>Dimensions Exploration

-- Explore all countries our customers come form
SELECT DISTINCT country FROM gold.dim_customers

-- Explore all categories 'The major divisions'
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1, 2, 3

-- >>Date Exploration
-- How many years of sales are available
SELECT 
	MIN(order_date) AS first_order_date,
	MAX(order_date) AS last_order_date,
	DATEDIFF(year, MIN(order_date),MAX(order_date)) order_range_years
FROM gold.fact_sales

-- Find the youngest and the oldest customer
SELECT 
MIN(DATEDIFF(year, birthdate, GETDATE())) Youngest,
MAX(DATEDIFF(year, birthdate, GETDATE())) Oldest
FROM gold.dim_customers

--->> Measure Exploration
-- Find the total sales
SELECT SUM(sales_amount) AS total_sales
FROM gold.fact_sales

--Find how many items are sold
SELECT SUM(quantity) AS total_quantity
FROM gold.fact_sales


--Find the average selling price
SELECT AVG(price) AS avg_price
FROM gold.fact_sales

--Find the total number of orders
SELECT COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales

--Find the total number of products
SELECT COUNT(DISTINCT product_id) AS total_products
FROM gold.dim_products

--Find the total number of customers
SELECT COUNT(DISTINCT customer_key) AS total_products
FROM gold.dim_customers;

--Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) AS total_customer_order
FROM gold.fact_sales;


-- Generate a report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL 
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Toal Nr. Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products', COUNT(DISTINCT product_id) FROM gold.dim_products
UNION ALL
SELECT 'Total Nr. Customers', COUNT(DISTINCT customer_key) FROM gold.dim_customers
UNION ALL
SELECT 'Total Nr. Customers w Orders', COUNT(DISTINCT customer_key) FROM gold.fact_sales

-->> Magnitude
-- Find total customers by countries
SELECT 
	country,
	COUNT(customer_id) AS total_customers
FROM gold.dim_customers GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT 
	gender,
	COUNT(customer_id) AS total_customers
FROM gold.dim_customers GROUP BY gender
ORDER BY total_customers DESC

-- Find total products by category
SELECT 
	category,
	COUNT(product_id) AS total_products
FROM gold.dim_products GROUP BY category
ORDER BY total_products DESC

-- what is the average costs in each category
SELECT 
	category, 
	AVG(cost) AS avg_cost
FROM gold.dim_products GROUP BY category
ORDER BY avg_cost DESC

-- What is the total revenue generated for each category?
SELECT
	p.category,
	SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.category
ORDER BY total_revenue


-- what is the total revenue generated by each customer?

SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_revenue DESC

-- What is the distribution of items sold across countries?

 SELECT
	c.country,
	SUM(s.quantity) AS total_sold_items
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC

-->> Ranking analysis
-- Which five products generate the highest revenue

SELECT *
FROM (
SELECT
	p.product_name,
	SUM(s.sales_amount) AS total_revenue,
	ROW_NUMBER()OVER (ORDER BY SUM(s.sales_amount) DESC) AS rank_products
FROM gold.fact_sales s
LEFT JOIN gold.dim_products p
ON p.product_key = s.product_key
GROUP BY p.product_name)t
WHERE rank_products <=5



-- Find the top 10 customers who have generated the highest revenue
SELECT TOP 10
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_revenue DESC



-- The 3 customerws with the fewest orders placed
SELECT TOP 3
	c.customer_key,
	c.first_name,
	c.last_name,
	COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY 
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_orders 
